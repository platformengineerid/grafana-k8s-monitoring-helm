{{ define "agent.config.tracesService" }}
// Tempo
remote.kubernetes.secret "traces_service" {
  name = {{ include "kubernetes_monitoring.traces_service.secret.name" . | quote }}
  namespace = {{ .Values.externalServices.tempo.secret.namespace | default .Release.Namespace | quote }}
}

{{- with .Values.externalServices.tempo }}
{{ if eq .authMode "basic" }}
otelcol.auth.basic "tempo" {
  username = remote.kubernetes.secret.traces_service.data[{{ .basicAuth.usernameKey }}]
  password = remote.kubernetes.secret.traces_service.data[{{ .basicAuth.passwordKey }}]
}
{{- end }}
{{ if eq .protocol "otlp" }}
otelcol.exporter.otlp "tempo" {
{{- else if eq .protocol "otlphttp" }}
otelcol.exporter.otlphttp "tempo" {
{{- end }}
  client {
    endpoint = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .hostKey }}])
{{ if eq .authMode "basic" }}
    auth = otelcol.auth.basic.tempo.handler
{{- end }}
    headers = { "X-Scope-OrgID" = remote.kubernetes.secret.traces_service.data[{{ .tenantIdKey }}] }
{{- if .tlsOptions }}
    tls {
{{ .tlsOptions | indent 6 }}
    }
{{- end }}
  }
}
{{- end }}
{{ end }}
